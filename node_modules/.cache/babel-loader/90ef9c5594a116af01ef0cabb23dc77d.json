{"ast":null,"code":"var _jsxFileName = \"/Users/acarlson/Desktop/CSC/MTA-Data/practice-site/subway-app/src/RenderMap2.js\";\nimport React, { useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport subways from './data/subways.json';\nimport ReactMapGL, { Source, Layer, Marker, Popup } from 'react-map-gl';\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiYW1jMjM3NSIsImEiOiJjazJ3MnRuMXkwOHdyM25xd3V2aWp6ZWduIn0.DLl2wPIb3rDT72TZ0V7z5w';\n\nfunction RenderMap2(props) {\n  const [viewport, setViewport] = useState({\n    width: 600,\n    height: 500,\n    latitude: 40.74,\n    longitude: -73.9,\n    zoom: 9.3\n  });\n  const [selectedStop, setSelectedStop] = useState(null);\n\n  const handleCircleClick = event => {\n    event.preventDefault();\n    setSelectedStop(stop);\n    console.log(stop.properties.Stop_Name);\n  };\n\n  const subwaysLayer = {\n    id: 'subways',\n    type: 'circle',\n    source: 'subways',\n    paint: {\n      'circle-color': 'black',\n      'circle-opacity': 0.2\n    }\n  };\n  return /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    onViewportChange: nextViewport => setViewport(nextViewport),\n    mapboxApiAccessToken: MAPBOX_TOKEN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), subways.features.map(stop => /*#__PURE__*/React.createElement(Marker, {\n    key: stop.properties.GTFS_Stop_ID,\n    latitude: stop.geometry.coordinates[1],\n    longitude: stop.geometry.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => handleCircleClick(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/logo.svg\",\n    alt: \"Circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  })))), selectedStop ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: selectedStop.geometry.coordinates[1],\n    longitude: selectedStop.geometry.coordinates[0],\n    onClose: () => {\n      setSelectedStop(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, selectedStop.properties.Stop_Name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, \"Lines: \", selectedStop.properties.Daytime_Routes))) : null);\n}\n\nexport default RenderMap2;","map":{"version":3,"sources":["/Users/acarlson/Desktop/CSC/MTA-Data/practice-site/subway-app/src/RenderMap2.js"],"names":["React","useState","mapboxgl","subways","ReactMapGL","Source","Layer","Marker","Popup","MAPBOX_TOKEN","RenderMap2","props","viewport","setViewport","width","height","latitude","longitude","zoom","selectedStop","setSelectedStop","handleCircleClick","event","preventDefault","stop","console","log","properties","Stop_Name","subwaysLayer","id","type","source","paint","nextViewport","features","map","GTFS_Stop_ID","geometry","coordinates","Daytime_Routes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport subways from './data/subways.json';\nimport ReactMapGL, {Source, Layer, Marker, Popup} from 'react-map-gl';\n\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiYW1jMjM3NSIsImEiOiJjazJ3MnRuMXkwOHdyM25xd3V2aWp6ZWduIn0.DLl2wPIb3rDT72TZ0V7z5w';\n\nfunction RenderMap2(props) {\n\n    const [viewport, setViewport] = useState({\n        width: 600,\n        height: 500,\n        latitude: 40.74,\n        longitude: -73.9,\n        zoom: 9.3\n    })\n\n    const [selectedStop, setSelectedStop] = useState(null)\n\n    const handleCircleClick = (event) => {\n        event.preventDefault();\n        setSelectedStop(stop)\n        console.log(stop.properties.Stop_Name)\n    }\n    const subwaysLayer = {\n        id: 'subways',\n        type: 'circle',\n        source: 'subways',\n        paint: {\n            'circle-color' : 'black',\n            'circle-opacity': 0.2\n        },\n    }\n    \n\n    return (\n        <ReactMapGL \n            {...viewport}\n            onViewportChange = {nextViewport => setViewport(nextViewport)}\n            mapboxApiAccessToken = {MAPBOX_TOKEN}\n            >\n                {subways.features.map(stop => (\n                    <Marker \n                        key = {stop.properties.GTFS_Stop_ID}\n                        latitude = {stop.geometry.coordinates[1]}\n                        longitude = {stop.geometry.coordinates[0]}\n                        >\n                        <button onClick = {(event) => handleCircleClick(event)}>\n                            <img src = \"/logo.svg\" alt = \"Circle\" />\n                        </button>\n                    </Marker>\n                ))}\n                {selectedStop ? (\n                    <Popup \n                        latitude = {selectedStop.geometry.coordinates[1]}\n                        longitude = {selectedStop.geometry.coordinates[0]}\n                        onClose = {() => {\n                            setSelectedStop(null)}}\n                        >\n                            <div>\n                                <h2>{selectedStop.properties.Stop_Name}</h2>\n                                <p>Lines: {selectedStop.properties.Daytime_Routes}</p>\n                            </div>\n                    </Popup> \n                ) : null}\n\n\n            </ReactMapGL>\n\n    )\n}\n\nexport default RenderMap2;\n"]},"metadata":{},"sourceType":"module"}