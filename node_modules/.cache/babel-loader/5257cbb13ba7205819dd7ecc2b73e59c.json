{"ast":null,"code":"var _jsxFileName = \"/Users/acarlson/Desktop/CSC/MTA-Data/practice-site/subway-app/src/RenderMap2.js\";\nimport React, { useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport subways from './data/subways.json';\nmapboxgl.accessToken = 'pk.eyJ1IjoiYW1jMjM3NSIsImEiOiJjazJ3MnRuMXkwOHdyM25xd3V2aWp6ZWduIn0.DLl2wPIb3rDT72TZ0V7z5w';\n\nfunction RenderMap2() {\n  // super(props);\n  // this.state = {\n  //     lng: -73.9,\n  //     lat: 40.7,\n  //     zoom:8\n  // }\n  const map = new mapboxgl.Map({\n    container: this.mapContainer,\n    style: 'mapbox://styles/mapbox/light-v10',\n    center: [-73.9, 40.7],\n    zoom: 8\n  });\n  map.on('load', () => {\n    map.addSource('subways', {\n      'type': 'geojson',\n      'data': subways\n    });\n    map.addLayer({\n      'id': 'subways',\n      'type': 'circle',\n      'source': 'subways',\n      'paint': {\n        'circle-color': 'black',\n        'circle-opacity': 0.2\n      }\n    });\n  });\n  map.on('click', 'subways', obj => {\n    const coordinates = obj.features[0].geometry.coordinates.slice();\n    const description = obj.features[0].properties.Stop_Name;\n    new mapboxgl.Popup().setLngLat(coordinates).setHTML(description).addTo(map);\n  });\n  map.on('mouseenter', 'subways', () => {\n    map.getCanvas().style.cursor = 'pointer';\n  });\n  map.on('mouseleave', 'subways', () => {\n    map.getCanvas().style.cursor = '';\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: el => this.mapContainer = el,\n    className: \"mapContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default RenderMap2; // class RenderMap2 extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             lng: -73.9,\n//             lat: 40.7,\n//             zoom:8\n//         };\n//     }\n//     componentDidMount() {\n//         const map = new mapboxgl.Map({\n//             container : this.mapContainer,\n//             style: 'mapbox://styles/mapbox/light-v10',\n//             center: [this.state.lng, this.state.lat],\n//             zoom: this.state.zoom,\n//         });\n//         map.on('load', () => {\n//             map.addSource('subways', {\n//                 'type': 'geojson',\n//                 'data': subways\n//             })\n//             map.addLayer({\n//                 'id': 'subways',\n//                 'type': 'circle',\n//                 'source': 'subways',\n//                 'paint': {\n//                     'circle-color' : 'black',\n//                     'circle-opacity': 0.2\n//                 }\n//             })\n//         })\n//         map.on('click','subways', (obj) => {\n//             const coordinates = obj.features[0].geometry.coordinates.slice();\n//             const description = obj.features[0].properties.Stop_Name;\n//             new mapboxgl.Popup()\n//                 .setLngLat(coordinates)\n//                 .setHTML(description)\n//                 .addTo(map);\n//         })\n//         map.on('mouseenter', 'subways', () => {\n//             map.getCanvas().style.cursor = 'pointer';\n//         })\n//         map.on('mouseleave', 'subways', () => {\n//             map.getCanvas().style.cursor = '';\n//         })\n//     }\n//     render() {\n//     return (\n//         <div>\n//             <div ref={el => this.mapContainer = el} className='mapContainer' />\n//         </div>\n//     )\n//     }\n// }","map":{"version":3,"sources":["/Users/acarlson/Desktop/CSC/MTA-Data/practice-site/subway-app/src/RenderMap2.js"],"names":["React","useState","mapboxgl","subways","accessToken","RenderMap2","map","Map","container","mapContainer","style","center","zoom","on","addSource","addLayer","obj","coordinates","features","geometry","slice","description","properties","Stop_Name","Popup","setLngLat","setHTML","addTo","getCanvas","cursor","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEAD,QAAQ,CAACE,WAAT,GAAuB,2FAAvB;;AAEA,SAASC,UAAT,GAAsB;AAClB;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,GAAG,GAAG,IAAIJ,QAAQ,CAACK,GAAb,CAAiB;AACzBC,IAAAA,SAAS,EAAG,KAAKC,YADQ;AAEzBC,IAAAA,KAAK,EAAE,kCAFkB;AAGzBC,IAAAA,MAAM,EAAE,CAAC,CAAC,IAAF,EAAQ,IAAR,CAHiB;AAIzBC,IAAAA,IAAI,EAAE;AAJmB,GAAjB,CAAZ;AAOAN,EAAAA,GAAG,CAACO,EAAJ,CAAO,MAAP,EAAe,MAAM;AACjBP,IAAAA,GAAG,CAACQ,SAAJ,CAAc,SAAd,EAAyB;AACrB,cAAQ,SADa;AAErB,cAAQX;AAFa,KAAzB;AAIAG,IAAAA,GAAG,CAACS,QAAJ,CAAa;AACT,YAAM,SADG;AAET,cAAQ,QAFC;AAGT,gBAAU,SAHD;AAIT,eAAS;AACL,wBAAiB,OADZ;AAEL,0BAAkB;AAFb;AAJA,KAAb;AASH,GAdD;AAgBAT,EAAAA,GAAG,CAACO,EAAJ,CAAO,OAAP,EAAe,SAAf,EAA2BG,GAAD,IAAS;AAC/B,UAAMC,WAAW,GAAGD,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBC,QAAhB,CAAyBF,WAAzB,CAAqCG,KAArC,EAApB;AACA,UAAMC,WAAW,GAAGL,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBI,UAAhB,CAA2BC,SAA/C;AACA,QAAIrB,QAAQ,CAACsB,KAAb,GACKC,SADL,CACeR,WADf,EAEKS,OAFL,CAEaL,WAFb,EAGKM,KAHL,CAGWrB,GAHX;AAKH,GARD;AASAA,EAAAA,GAAG,CAACO,EAAJ,CAAO,YAAP,EAAqB,SAArB,EAAgC,MAAM;AAClCP,IAAAA,GAAG,CAACsB,SAAJ,GAAgBlB,KAAhB,CAAsBmB,MAAtB,GAA+B,SAA/B;AACH,GAFD;AAGAvB,EAAAA,GAAG,CAACO,EAAJ,CAAO,YAAP,EAAqB,SAArB,EAAgC,MAAM;AAClCP,IAAAA,GAAG,CAACsB,SAAJ,GAAgBlB,KAAhB,CAAsBmB,MAAtB,GAA+B,EAA/B;AACH,GAFD;AAIA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEC,EAAE,IAAI,KAAKrB,YAAL,GAAoBqB,EAApC;AAAwC,IAAA,SAAS,EAAC,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA;AAKH;;AAED,eAAezB,UAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport subways from './data/subways.json';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiYW1jMjM3NSIsImEiOiJjazJ3MnRuMXkwOHdyM25xd3V2aWp6ZWduIn0.DLl2wPIb3rDT72TZ0V7z5w';\n\nfunction RenderMap2() {\n    // super(props);\n    // this.state = {\n    //     lng: -73.9,\n    //     lat: 40.7,\n    //     zoom:8\n    // }\n\n    const map = new mapboxgl.Map({\n        container : this.mapContainer,\n        style: 'mapbox://styles/mapbox/light-v10',\n        center: [-73.9, 40.7],\n        zoom: 8,\n    });\n\n    map.on('load', () => {\n        map.addSource('subways', {\n            'type': 'geojson',\n            'data': subways\n        })\n        map.addLayer({\n            'id': 'subways',\n            'type': 'circle',\n            'source': 'subways',\n            'paint': {\n                'circle-color' : 'black',\n                'circle-opacity': 0.2\n            }\n        })\n    })\n\n    map.on('click','subways', (obj) => {\n        const coordinates = obj.features[0].geometry.coordinates.slice();\n        const description = obj.features[0].properties.Stop_Name;\n        new mapboxgl.Popup()\n            .setLngLat(coordinates)\n            .setHTML(description)\n            .addTo(map);\n        \n    })\n    map.on('mouseenter', 'subways', () => {\n        map.getCanvas().style.cursor = 'pointer';\n    })\n    map.on('mouseleave', 'subways', () => {\n        map.getCanvas().style.cursor = '';\n    })\n\n    return (\n    <div>\n        <div ref={el => this.mapContainer = el} className='mapContainer' />\n    </div>\n    )\n}\n\nexport default RenderMap2;\n// class RenderMap2 extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             lng: -73.9,\n//             lat: 40.7,\n//             zoom:8\n//         };\n//     }\n\n//     componentDidMount() {\n//         const map = new mapboxgl.Map({\n//             container : this.mapContainer,\n//             style: 'mapbox://styles/mapbox/light-v10',\n//             center: [this.state.lng, this.state.lat],\n//             zoom: this.state.zoom,\n//         });\n\n//         map.on('load', () => {\n//             map.addSource('subways', {\n//                 'type': 'geojson',\n//                 'data': subways\n//             })\n//             map.addLayer({\n//                 'id': 'subways',\n//                 'type': 'circle',\n//                 'source': 'subways',\n//                 'paint': {\n//                     'circle-color' : 'black',\n//                     'circle-opacity': 0.2\n//                 }\n//             })\n//         })\n\n//         map.on('click','subways', (obj) => {\n//             const coordinates = obj.features[0].geometry.coordinates.slice();\n//             const description = obj.features[0].properties.Stop_Name;\n//             new mapboxgl.Popup()\n//                 .setLngLat(coordinates)\n//                 .setHTML(description)\n//                 .addTo(map);\n            \n//         })\n//         map.on('mouseenter', 'subways', () => {\n//             map.getCanvas().style.cursor = 'pointer';\n//         })\n//         map.on('mouseleave', 'subways', () => {\n//             map.getCanvas().style.cursor = '';\n//         })\n        \n//     }\n//     render() {\n//     return (\n//         <div>\n//             <div ref={el => this.mapContainer = el} className='mapContainer' />\n//         </div>\n//     )\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}