{"ast":null,"code":"var _jsxFileName = \"/Users/acarlson/Desktop/CSC/MTA-Data/practice-site/subway-app/src/RenderBarChart.js\";\nimport React, { useState } from \"react\";\nimport { Label, Radio } from '@rebass/forms';\nimport { Box } from 'rebass';\nimport { BarChart, Bar, Cell, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from \"recharts\";\nimport subways_with_tracts from './data/subways_with_tracts.json';\nimport census_metadata from './data/census_metadata.json';\n\nfunction RenderBarChart() {\n  const [barVar, setBarVar] = useState('DP05_0071PE');\n  const [data, setData] = useState(subways_with_tracts);\n\n  const handleIncomeClick = event => {\n    setBarVar('DP03_0062E');\n    const _barVar = 'DP03_0062E';\n    setData(data.sort((a, b) => b[_barVar] - a[_barVar]));\n  };\n\n  const handleRadioClick = event => {\n    setBarVar(event.target.value);\n    const _barVar = event.target.value;\n    setData(data.sort((a, b) => b[_barVar] - a[_barVar]));\n  };\n\n  const RadioItems = ({\n    data\n  }) => data.map(obj => /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    name: \"variable\",\n    id: obj.key,\n    value: obj.key,\n    onClick: event => handleRadioClick(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), obj.variable_name)) //<option value = {obj.gtfs}>{obj.station_lines}</option>\n  );\n  /*            <Box>\n                  <Label>\n                      <Radio \n                      name='variable'\n                      id = 'DP03_0062E'\n                      value = 'DP03_0062E'\n                      onClick = {(event) => handleIncomeClick(event)}\n                      />\n                      Median Household Income\n                  </Label>\n              </Box>\n  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => handleIncomeClick(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Median Household Income\"), /*#__PURE__*/React.createElement(RadioItems, {\n    data: census_metadata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BarChart, {\n    width: 600,\n    height: 300,\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"Stop_Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: barVar,\n    fill: \"#8884d8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default RenderBarChart;","map":{"version":3,"sources":["/Users/acarlson/Desktop/CSC/MTA-Data/practice-site/subway-app/src/RenderBarChart.js"],"names":["React","useState","Label","Radio","Box","BarChart","Bar","Cell","CartesianGrid","XAxis","YAxis","Tooltip","Legend","subways_with_tracts","census_metadata","RenderBarChart","barVar","setBarVar","data","setData","handleIncomeClick","event","_barVar","sort","a","b","handleRadioClick","target","value","RadioItems","map","obj","key","variable_name","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport {Label, Radio} from '@rebass/forms'\nimport {Box} from 'rebass'\n\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nimport subways_with_tracts from './data/subways_with_tracts.json'\nimport census_metadata from './data/census_metadata.json'\n\nfunction RenderBarChart() {\n\n    const [barVar, setBarVar] = useState('DP05_0071PE');\n    const [data, setData] = useState(subways_with_tracts);\n\n\n    const handleIncomeClick = (event) => {\n        setBarVar('DP03_0062E');\n        const _barVar = 'DP03_0062E';\n        setData(data.sort((a,b) => b[_barVar] - a[_barVar]));\n    }\n\n    const handleRadioClick = (event) => {\n        setBarVar(event.target.value);\n        const _barVar = event.target.value;\n        setData(data.sort((a,b) => b[_barVar] - a[_barVar]))\n    }\n    const RadioItems = ({data}) => \n    (data.map(obj => \n        <Box><Label>\n            <Radio\n                name = 'variable'\n                id = {obj.key}\n                value = {obj.key}\n                onClick = {(event) => handleRadioClick(event)} \n            />\n            {obj.variable_name}\n        </Label>\n        </Box>\n        //<option value = {obj.gtfs}>{obj.station_lines}</option>\n      ))\n/*            <Box>\n                <Label>\n                    <Radio \n                    name='variable'\n                    id = 'DP03_0062E'\n                    value = 'DP03_0062E'\n                    onClick = {(event) => handleIncomeClick(event)}\n                    />\n                    Median Household Income\n                </Label>\n            </Box>\n*/\n    return (\n        <div>\n            <button onClick={(event) => handleIncomeClick(event)}>Median Household Income</button>\n            <RadioItems data = {census_metadata} />\n\n            <BarChart\n                width={600}\n                height={300}\n                data={data}\n                margin={{\n                top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"Stop_Name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey={barVar} fill=\"#8884d8\" />\n            </BarChart>\n\n        </div>\n\n    );\n}\n\nexport default RenderBarChart;\n\n"]},"metadata":{},"sourceType":"module"}