{"ast":null,"code":"var _jsxFileName = \"/Users/acarlson/Desktop/CSC/MTA-Data/practice-site/subway-app/src/RenderMap.js\";\nimport React, { useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport subways from './data/subways.json';\nmapboxgl.accessToken = 'pk.eyJ1IjoiYW1jMjM3NSIsImEiOiJjazJ3MnRuMXkwOHdyM25xd3V2aWp6ZWduIn0.DLl2wPIb3rDT72TZ0V7z5w';\n\nclass RenderMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -73.9,\n      lat: 40.7,\n      zoom: 8\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    map.on('load', () => {\n      map.addSource('subways', {\n        'type': 'geojson',\n        'data': subways\n      });\n      map.addLayer({\n        'id': 'subways',\n        'type': 'symbol',\n        'source': 'subways',\n        'layout': {},\n        'paint': {\n          'circle-color': 'black'\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default RenderMap;","map":{"version":3,"sources":["/Users/acarlson/Desktop/CSC/MTA-Data/practice-site/subway-app/src/RenderMap.js"],"names":["React","useState","mapboxgl","subways","accessToken","RenderMap","Component","constructor","props","state","lng","lat","zoom","componentDidMount","map","Map","container","mapContainer","style","center","on","addSource","addLayer","render","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEAD,QAAQ,CAACE,WAAT,GAAuB,2FAAvB;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,CAAC,IADG;AAETC,MAAAA,GAAG,EAAE,IAFI;AAGTC,MAAAA,IAAI,EAAC;AAHI,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,GAAG,GAAG,IAAIZ,QAAQ,CAACa,GAAb,CAAiB;AACzBC,MAAAA,SAAS,EAAG,KAAKC,YADQ;AAEzBC,MAAAA,KAAK,EAAE,kCAFkB;AAGzBC,MAAAA,MAAM,EAAE,CAAC,KAAKV,KAAL,CAAWC,GAAZ,EAAiB,KAAKD,KAAL,CAAWE,GAA5B,CAHiB;AAIzBC,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AAJQ,KAAjB,CAAZ;AAOAE,IAAAA,GAAG,CAACM,EAAJ,CAAO,MAAP,EAAe,MAAM;AACjBN,MAAAA,GAAG,CAACO,SAAJ,CAAc,SAAd,EAAyB;AACrB,gBAAQ,SADa;AAErB,gBAAQlB;AAFa,OAAzB;AAIAW,MAAAA,GAAG,CAACQ,QAAJ,CAAa;AACT,cAAM,SADG;AAET,gBAAQ,QAFC;AAGT,kBAAU,SAHD;AAIT,kBAAU,EAJD;AAKT,iBAAS;AAAC,0BAAe;AAAhB;AALA,OAAb;AAOH,KAZD;AAcH;;AACDC,EAAAA,MAAM,GAAG;AACT,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEC,EAAE,IAAI,KAAKP,YAAL,GAAoBO,EAApC;AAAwC,MAAA,SAAS,EAAC,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKC;;AAvCmC;;AA0CxC,eAAenB,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport subways from './data/subways.json';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiYW1jMjM3NSIsImEiOiJjazJ3MnRuMXkwOHdyM25xd3V2aWp6ZWduIn0.DLl2wPIb3rDT72TZ0V7z5w';\n\nclass RenderMap extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lng: -73.9,\n            lat: 40.7,\n            zoom:8\n        };\n    }\n\n    componentDidMount() {\n        const map = new mapboxgl.Map({\n            container : this.mapContainer,\n            style: 'mapbox://styles/mapbox/light-v10',\n            center: [this.state.lng, this.state.lat],\n            zoom: this.state.zoom,\n        });\n\n        map.on('load', () => {\n            map.addSource('subways', {\n                'type': 'geojson',\n                'data': subways\n            })\n            map.addLayer({\n                'id': 'subways',\n                'type': 'symbol',\n                'source': 'subways',\n                'layout': {},\n                'paint': {'circle-color':'black'}\n            })\n        })\n        \n    }\n    render() {\n    return (\n        <div>\n            <div ref={el => this.mapContainer = el} className='mapContainer' />\n        </div>\n    )\n    }\n}\n\nexport default RenderMap;"]},"metadata":{},"sourceType":"module"}